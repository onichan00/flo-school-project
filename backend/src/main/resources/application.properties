# configure the H2 data source and console
#spring.h2.console.enabled=true
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.generate-ddl=true

# persist the data
#spring.datasource.url=jdbc:h2:file:./sampledata
#spring.datasource.url=jdbc:h2:mem:helios

server.port = 8080
server.servlet.context-path = /api
server.error.include-message = always
logging.level.org.springframework = info

# setting the database - fixed URL (otherwise spring will choose an arbitrary one)
# note: dialects are auto-detected by hibernate
spring.datasource.url=jdbc:h2:mem:helios

# drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create-drop

# used to initialise the db with data (remove this section of you don't have it)
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
#spring.sql.init.data-locations=classpath:/ALSDKJF.sql

# turn statistics on
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=info

# show all queries for debugging purposes
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace

# enabling h2 console
spring.h2.console.enabled=true

# allow others to connect to h2 database
spring.h2.console.settings.web-allow-others=true

